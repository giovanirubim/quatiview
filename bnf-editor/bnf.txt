id ::= /^[a-zA-Z_]\w*/
float_const::= /^([1-9]\d*|0)\.\d+\b/
int_const::= /^([1-9]\d*|0)\b/
char_const ::= /^'([^\n'\\]|\\[\x21-\x7e])'/
str_const ::= /^"([^\n"\\]|\\[\x21-\x7e])*"/
const ::= float_const | int_const
bracked_expr ::= '(' expr ')'
expr ::= op9
op9 ::= op8 (('=' | '+=' | '-=' | '*=' | '/=' | '%=') op8)*
op8 ::= op7 ('||' op7)*
op7 ::= op6 ('&&' op6)*
op6 ::= op5 (('==' | '!=') op5)*
op5 ::= op4 (('>=' | '<=' | '>' | '<') op4)*
op4 ::= op3 (('+' | '-') op3)*
op3 ::= op2 (('*' | '/' | '%') op2)*
op2 ::= ('-' | '*' | '&') op1 | 'sizeof' '(' op1 ')'
op1 ::= op0 (arg_call | idx_acc | mbr_acc)*
op0 ::= bracked_expr | id | const
arg_call ::= '(' [expr (',' expr)*] ')'
idx_acc ::= '[' expr ']'
mbr_acc ::= '.' id
int_type ::= 'char' | 'int'
struct_type ::= 'struct' id
void ::= 'void'
type_name ::= int_type | struct_type | void
